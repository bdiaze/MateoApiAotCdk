// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace MateoApiAotCdk.Entities.OptimizeDbContext
{
    public partial class MateoDbContextModel
    {
        partial void Initialize()
        {
            var entrenamiento = EntrenamientoEntityType.Create(this);

            EntrenamientoEntityType.CreateAnnotations(entrenamiento);

            AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);
            AddAnnotation("ProductVersion", "8.0.14");
            AddAnnotation("Relational:MaxIdentifierLength", 63);
            AddRuntimeAnnotation("Relational:RelationalModel", CreateRelationalModel());
        }

        private IRelationalModel CreateRelationalModel()
        {
            var relationalModel = new RelationalModel(this);

            var entrenamiento = FindEntityType("MateoApiAotCdk.Entities.Models.Entrenamiento")!;

            var defaultTableMappings = new List<TableMappingBase<ColumnMappingBase>>();
            entrenamiento.SetRuntimeAnnotation("Relational:DefaultMappings", defaultTableMappings);
            var mateoApiAotCdkEntitiesModelsEntrenamientoTableBase = new TableBase("MateoApiAotCdk.Entities.Models.Entrenamiento", null, relationalModel);
            var idColumnBase = new ColumnBase<ColumnMappingBase>("id", "bigint", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("id", idColumnBase);
            var id_requestColumnBase = new ColumnBase<ColumnMappingBase>("id_request", "uuid", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("id_request", id_requestColumnBase);
            var id_tipo_ejercicioColumnBase = new ColumnBase<ColumnMappingBase>("id_tipo_ejercicio", "integer", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase)
            {
                IsNullable = true
            };
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("id_tipo_ejercicio", id_tipo_ejercicioColumnBase);
            var id_usuarioColumnBase = new ColumnBase<ColumnMappingBase>("id_usuario", "text", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("id_usuario", id_usuarioColumnBase);
            var inicioColumnBase = new ColumnBase<ColumnMappingBase>("inicio", "timestamp with time zone", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("inicio", inicioColumnBase);
            var repeticionesColumnBase = new ColumnBase<ColumnMappingBase>("repeticiones", "smallint", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase)
            {
                IsNullable = true
            };
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("repeticiones", repeticionesColumnBase);
            var segundos_descansoColumnBase = new ColumnBase<ColumnMappingBase>("segundos_descanso", "smallint", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase)
            {
                IsNullable = true
            };
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("segundos_descanso", segundos_descansoColumnBase);
            var segundos_entrenamientoColumnBase = new ColumnBase<ColumnMappingBase>("segundos_entrenamiento", "smallint", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase)
            {
                IsNullable = true
            };
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("segundos_entrenamiento", segundos_entrenamientoColumnBase);
            var serieColumnBase = new ColumnBase<ColumnMappingBase>("serie", "smallint", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase)
            {
                IsNullable = true
            };
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("serie", serieColumnBase);
            var terminoColumnBase = new ColumnBase<ColumnMappingBase>("termino", "timestamp with time zone", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.Columns.Add("termino", terminoColumnBase);
            relationalModel.DefaultTables.Add("MateoApiAotCdk.Entities.Models.Entrenamiento", mateoApiAotCdkEntitiesModelsEntrenamientoTableBase);
            var mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase = new TableMappingBase<ColumnMappingBase>(entrenamiento, mateoApiAotCdkEntitiesModelsEntrenamientoTableBase, true);
            mateoApiAotCdkEntitiesModelsEntrenamientoTableBase.AddTypeMapping(mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase, false);
            defaultTableMappings.Add(mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)idColumnBase, entrenamiento.FindProperty("Id")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)id_requestColumnBase, entrenamiento.FindProperty("IdRequest")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)id_tipo_ejercicioColumnBase, entrenamiento.FindProperty("IdTipoEjercicio")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)id_usuarioColumnBase, entrenamiento.FindProperty("IdUsuario")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)inicioColumnBase, entrenamiento.FindProperty("Inicio")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)repeticionesColumnBase, entrenamiento.FindProperty("Repeticiones")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)segundos_descansoColumnBase, entrenamiento.FindProperty("SegundosDescanso")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)segundos_entrenamientoColumnBase, entrenamiento.FindProperty("SegundosEntrenamiento")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)serieColumnBase, entrenamiento.FindProperty("Serie")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)terminoColumnBase, entrenamiento.FindProperty("Termino")!, mateoApiAotCdkEntitiesModelsEntrenamientoMappingBase);

            var tableMappings = new List<TableMapping>();
            entrenamiento.SetRuntimeAnnotation("Relational:TableMappings", tableMappings);
            var entrenamientoTable = new Table("entrenamiento", "mateo", relationalModel);
            var idColumn = new Column("id", "bigint", entrenamientoTable);
            entrenamientoTable.Columns.Add("id", idColumn);
            idColumn.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);
            var id_requestColumn = new Column("id_request", "uuid", entrenamientoTable);
            entrenamientoTable.Columns.Add("id_request", id_requestColumn);
            var id_tipo_ejercicioColumn = new Column("id_tipo_ejercicio", "integer", entrenamientoTable)
            {
                IsNullable = true
            };
            entrenamientoTable.Columns.Add("id_tipo_ejercicio", id_tipo_ejercicioColumn);
            var id_usuarioColumn = new Column("id_usuario", "text", entrenamientoTable);
            entrenamientoTable.Columns.Add("id_usuario", id_usuarioColumn);
            var inicioColumn = new Column("inicio", "timestamp with time zone", entrenamientoTable);
            entrenamientoTable.Columns.Add("inicio", inicioColumn);
            var repeticionesColumn = new Column("repeticiones", "smallint", entrenamientoTable)
            {
                IsNullable = true
            };
            entrenamientoTable.Columns.Add("repeticiones", repeticionesColumn);
            var segundos_descansoColumn = new Column("segundos_descanso", "smallint", entrenamientoTable)
            {
                IsNullable = true
            };
            entrenamientoTable.Columns.Add("segundos_descanso", segundos_descansoColumn);
            var segundos_entrenamientoColumn = new Column("segundos_entrenamiento", "smallint", entrenamientoTable)
            {
                IsNullable = true
            };
            entrenamientoTable.Columns.Add("segundos_entrenamiento", segundos_entrenamientoColumn);
            var serieColumn = new Column("serie", "smallint", entrenamientoTable)
            {
                IsNullable = true
            };
            entrenamientoTable.Columns.Add("serie", serieColumn);
            var terminoColumn = new Column("termino", "timestamp with time zone", entrenamientoTable);
            entrenamientoTable.Columns.Add("termino", terminoColumn);
            var pK_entrenamiento = new UniqueConstraint("PK_entrenamiento", entrenamientoTable, new[] { idColumn });
            entrenamientoTable.PrimaryKey = pK_entrenamiento;
            var pK_entrenamientoUc = RelationalModel.GetKey(this,
                "MateoApiAotCdk.Entities.Models.Entrenamiento",
                new[] { "Id" });
            pK_entrenamiento.MappedKeys.Add(pK_entrenamientoUc);
            RelationalModel.GetOrCreateUniqueConstraints(pK_entrenamientoUc).Add(pK_entrenamiento);
            entrenamientoTable.UniqueConstraints.Add("PK_entrenamiento", pK_entrenamiento);
            var iX_entrenamiento_id_request = new TableIndex(
            "IX_entrenamiento_id_request", entrenamientoTable, new[] { id_requestColumn }, true);
            var iX_entrenamiento_id_requestIx = RelationalModel.GetIndex(this,
                "MateoApiAotCdk.Entities.Models.Entrenamiento",
                new[] { "IdRequest" });
            iX_entrenamiento_id_request.MappedIndexes.Add(iX_entrenamiento_id_requestIx);
            RelationalModel.GetOrCreateTableIndexes(iX_entrenamiento_id_requestIx).Add(iX_entrenamiento_id_request);
            entrenamientoTable.Indexes.Add("IX_entrenamiento_id_request", iX_entrenamiento_id_request);
            var iX_entrenamiento_id_usuario_inicio = new TableIndex(
            "IX_entrenamiento_id_usuario_inicio", entrenamientoTable, new[] { id_usuarioColumn, inicioColumn }, false);
            var iX_entrenamiento_id_usuario_inicioIx = RelationalModel.GetIndex(this,
                "MateoApiAotCdk.Entities.Models.Entrenamiento",
                new[] { "IdUsuario", "Inicio" });
            iX_entrenamiento_id_usuario_inicio.MappedIndexes.Add(iX_entrenamiento_id_usuario_inicioIx);
            RelationalModel.GetOrCreateTableIndexes(iX_entrenamiento_id_usuario_inicioIx).Add(iX_entrenamiento_id_usuario_inicio);
            entrenamientoTable.Indexes.Add("IX_entrenamiento_id_usuario_inicio", iX_entrenamiento_id_usuario_inicio);
            relationalModel.Tables.Add(("entrenamiento", "mateo"), entrenamientoTable);
            var entrenamientoTableMapping = new TableMapping(entrenamiento, entrenamientoTable, true);
            entrenamientoTable.AddTypeMapping(entrenamientoTableMapping, false);
            tableMappings.Add(entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(idColumn, entrenamiento.FindProperty("Id")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(id_requestColumn, entrenamiento.FindProperty("IdRequest")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(id_tipo_ejercicioColumn, entrenamiento.FindProperty("IdTipoEjercicio")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(id_usuarioColumn, entrenamiento.FindProperty("IdUsuario")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(inicioColumn, entrenamiento.FindProperty("Inicio")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(repeticionesColumn, entrenamiento.FindProperty("Repeticiones")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(segundos_descansoColumn, entrenamiento.FindProperty("SegundosDescanso")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(segundos_entrenamientoColumn, entrenamiento.FindProperty("SegundosEntrenamiento")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(serieColumn, entrenamiento.FindProperty("Serie")!, entrenamientoTableMapping);
            RelationalModel.CreateColumnMapping(terminoColumn, entrenamiento.FindProperty("Termino")!, entrenamientoTableMapping);
            return relationalModel.MakeReadOnly();
        }
    }
}
